# Git Commands: push, pull, and fetch
Learn the difference between three common Git commands: push, pull, and fetch.

## What is the difference between push, pull, and fetch?

- `git push` - sends changes from your local branch to a remote repository (aka repo) or branch.
- `git fetch` - gets changes from a remote repo/branch and downloads them into your tracking branch.
- `git pull` - gets changes from a remote repo/branch, downloads them into your tracking branch, and merges them into your local branch.

### `git fetch` vs `git pull`
`git fetch` and `git pull` are often described as equivalent, but that is not entirely correct. `git pull` does two things under the hood: downloads changes (a `git fetch`) *and* merges them into your local branch (a `git merge`). A `git fetch` only does the former.

If you use `git fetch`, it checks to see if there is a tracking branch in your local repo. If so, it finds any changes in the remote branch and pulls them into your tracking branch. It does not change your local branch, so you also need to use `git merge origin/master` (for the "master" branch in the remote repo) to merge those changes into your local branch.  Note: a branch in your local repo may also be called "master," but "origin/master" here means you're merging from the "master" branch of the origin repo.

`git pull` simply does a `git fetch` followed immediately by a `git merge`. `git pull` requires fewer commands, but some people prefer to use `git fetch` followed by `git merge` to make sure they understand the changes they are bringing into their branch before the merge happens.

### `git push`
While `git fetch` and `git pull` are used to bring changes in from a remote repo/branch, `git push` takes your current branch and checks for a tracking branch in the remote repo connected to it. If the tracking branch exists, the changes in your branch are pushed to the remote branch/repo. This is how code is shared with a remote repository; you can think of it as "make the remote branch match your local branch."

A `git push` command will fail if the remote branch has diverged from your local branch, which happens if someone else commits changes after your last `git pull`. When this happens, your local branch needs to be synchronized with the remote branch using another `git pull` or `git fetch` and `git merge`.
